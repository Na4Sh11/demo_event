{"version":3,"sources":["utils/TokenUtil.jsx","utils/api.js","components/EventCard.jsx","pages/HomePage.jsx","pages/ProfilePage.jsx","pages/eventDetailsPage.jsx","pages/PaymentPage.jsx","pages/CreateEventPage.jsx","App.js","reportWebVitals.js","components/errorBoundary.jsx","index.js"],"names":["constructor","this","token","setToken","getToken","clearToken","API_URL","async","TokenUtil","error","console","getUserById","axios","get","id","headers","Authorization","EventCard","_ref","_images$","event","userFavorites","isFavorite","setIsFavorite","useState","loginWithRedirect","isAuthenticated","user","useAuth0","name","localDate","localTime","images","useEffect","includes","_jsxs","className","children","Link","to","_jsx","src","url","alt","Date","toLocaleDateString","onClick","e","stopPropagation","userId","eventId","delete","data","removeFromFavorites","sub","post","addToFavorites","log","FaHeart","HomePage","searchQuery","events","setEvents","loading","setLoading","setError","response","fetchEvents","filteredEvents","filter","toLowerCase","map","onFavoriteClick","handleFavoriteClick","onDetailsClick","handleDetailsClick","ProfilePage","getAccessTokenSilently","userData","setUserData","eventDetails","setEventDetails","bookedEvents","setBookedEvents","navigate","useNavigate","fetchUserData","auth0Id","historyResponse","getUserHistory","historyData","fetchedBookedEvents","eventIds","Set","favorites","event_id","length","eventDetailsPromises","getEventById","eventDetailsResponses","Promise","all","eventDetailsMap","forEach","res","err","handleStatusChange","newStatus","eventDate","currentDate","moment","format","isAfter","alert","put","updateEventStatus","email","organization","handleCreateEvent","_eventDetails$eventId","_eventDetails$event$e","status","event_date","CreateEventPage","eventName","setEventName","setEventDate","eventLocation","setEventLocation","eventDescription","setEventDescription","noOfTickets","setNoOfTickets","price","setPrice","success","setSuccess","authorizationParams","audience","authConfig","REACT_APP_AUTH0_AUDIENCE","scope","join","onSubmit","preventDefault","eventPayload","now","dates","start","classifications","segment","no_of_tickets","parseInt","parseFloat","venue","city","eventData","createEvent","type","value","onChange","target","required","PaymentPage","useParams","firstName","setFirstName","lastName","setLastName","setEmail","cardNumber","setCardNumber","expiryDate","setExpiryDate","cvv","setCvv","isValid","setIsValid","purchaseSuccess","setPurchaseSuccess","emailRegex","cardNumberRegex","expiryDateRegex","cvvRegex","Form","Group","controlId","Label","Control","placeholder","isInvalid","test","Feedback","Number","Button","variant","regex","match","window","location","href","event_Id","purchaseTickets","FaCheckCircle","color","size","FaCcVisa","FaCcMastercard","FaCcAmex","eventType","setEventType","eventUrl","setEventUrl","eventLocale","setEventLocale","eventImages","setEventImages","salesStartDate","setSalesStartDate","salesEndDate","setSalesEndDate","setLocalTime","timezone","setTimezone","statusCode","setStatusCode","category","setCategory","fetch","ok","Error","json","locale","sales","public","startDateTime","endDateTime","toISOString","posted_by","auth0_id","method","body","JSON","stringify","App","logout","isLoading","isDarkMode","setIsDarkMode","setSearchQuery","showModal","setShowModal","setOrganization","requestedScopes","checkUserInDatabase","handleAuth","startsWith","given_name","family_name","storeUserInDatabase","_Fragment","returnTo","origin","Routes","Route","path","element","EventDetailsPage","tabIndex","role","style","display","updateUserOrganization","htmlFor","readOnly","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ErrorBoundary","Component","props","super","state","hasError","getDerivedStateFromError","componentDidCatch","errorInfo","render","require","Modal","setAppElement","ReactDOM","createRoot","document","getElementById","React","StrictMode","Router","Auth0Provider","domain","REACT_APP_AUTH0_DOMAIN","clientId","REACT_APP_AUTH0_CLIENT_ID","redirect_uri"],"mappings":"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","file":"static/js/main.0fc40ae0.chunk.js","sourcesContent":["import authConfig from '../auth_config.json';\nimport { useAuth0 } from '@auth0/auth0-react';\n\n\n//const { loginWithRedirect, logout, user, isAuthenticated, getAccessTokenSilently, isLoading, handleRedirectCallback } = useAuth0();\nconst requestedScopes = [\"openid\", \"profile\", \"email\"];\n\nclass TokenUtil {\n    constructor() {\n      this.token = null;\n    }\n  \n    setToken(token) {\n      this.token = token;\n    }\n  \n    getToken() {\n    //   console.log(\"Retrieving token:\", this.token);\n      return this.token;\n    }\n  \n    clearToken() {\n      this.token = null;\n    }\n  }\n  \n  export default new TokenUtil();\n    // async fetchToken() {\n    //   if (!this.token) {\n    //     this.token = await getAccessTokenSilently({\n    //       authorizationParams: {\n    //         audience: authConfig.REACT_APP_AUTH0_AUDIENCE,\n    //         scope: requestedScopes.join(\" \"),\n    //       },\n    //     });\n    //   }\n    //   return this.token;\n    // }\n  \n//     getToken() {\n//       return this.token;\n//     }\n\n//     setToken(token){\n//         console.log(token);\n//         this.token = token;\n//         console.log(this.token);\n//     }\n  \n//     clearToken() {\n//       this.token = null;\n//     }\n//   }\n  \n//   export default new TokenUtil();","// src/api/api.js\nimport axios from 'axios';\nimport TokenUtil from '../utils/TokenUtil'; // Ensure you have a utility for token management\n//import { use } from '../../../../backend/src/routes/eventRoutes';\n//import { use } from '../../../../backend/src/routes/eventRoutes';\n\nconst API_URL = 'http://localhost:5001'; // Backend API base URL\n\n// Utility function to get the token\nconst getToken = async () => {\n  try {\n    const token = await TokenUtil.getToken(); // Retrieve the token from your utility\n    return token;\n  } catch (error) {\n    console.error('Error getting token:', error);\n    throw error;\n  }\n};\n\n// Events\nexport const getEvents = async () => {\n  try {\n    const token = await getToken();\n    return axios.get(`${API_URL}/events`, {\n      headers: { Authorization: `Bearer ${token}` },\n    });\n  } catch (error) {\n    console.error('Error fetching events:', error);\n    throw error;\n  }\n};\n\nexport const getEventById = async (id) => {\n  try {\n    const token = await getToken();\n    return axios.get(`${API_URL}/events/${id}`, {\n      headers: { Authorization: `Bearer ${token}` },\n    });\n  } catch (error) {\n    console.error('Error fetching event by ID:', error);\n    throw error;\n  }\n};\n\n// Users\nexport const getUsers = async () => {\n  try {\n    const token = await getToken();\n    return axios.get(`${API_URL}/users`, {\n      headers: { Authorization: `Bearer ${token}` },\n    });\n  } catch (error) {\n    console.error('Error fetching users:', error);\n    throw error;\n  }\n};\n\nexport const getUserById = async (id) => {\n  try {\n    const token = await getToken();\n    return axios.get(`${API_URL}/users/${id}`, {\n      headers: { Authorization: `Bearer ${token}` },\n    });\n  } catch (error) {\n    console.error('Error fetching user by ID:', error);\n    throw error;\n  }\n};\n\nexport const updateUserOrganization = async (id, organization) => {\n  try {\n    const token = await getToken();\n    return axios.put(`${API_URL}/users/${id}`, {\n      organization,\n    }, {\n      headers: { Authorization: `Bearer ${token}` },\n    });\n  } catch (error) {\n    console.error('Error updating user organization:', error);\n    throw error;\n  }\n};\n\n// Additional API Methods\nexport const createEvent = async (eventData) => {\n  try {\n    const token = await getToken();\n    return axios.post(`${API_URL}/events`, eventData, {\n      headers: { Authorization: `Bearer ${token}` },\n    });\n  } catch (error) {\n    console.error('Error creating event:', error);\n    throw error;\n  }\n};\n\nexport const deleteEvent = async (id) => {\n  try {\n    const token = await getToken();\n    return axios.delete(`${API_URL}/events/${id}`, {\n      headers: { Authorization: `Bearer ${token}` },\n    });\n  } catch (error) {\n    console.error('Error deleting event:', error);\n    throw error;\n  }\n};\n\n// Purchase Tickets\nexport const purchaseTickets = async (id, eventId, noOfTickets) => {\n  const token = await getToken(); // Retrieve token from TokenUtil\n  console.log(\"here at purchase\" + id);\n  console.log(\"here event \" + eventId);\n  return axios.post(\n    `${API_URL}/users/buyTickets`,\n    {\n      \"userId\" : id,\n      \"eventId\" : eventId,\n      \"noOfTickets\": noOfTickets\n    },\n    {\n      headers: {\n        Authorization: `Bearer ${token}`,\n        'Content-Type': 'application/json',\n      },\n    }\n  );\n};\n// Add to Favorites\nexport const addToFavorites = async (eventId, userId) => {\n  try {\n    const token = await getToken();\n    return axios.post(`${API_URL}/users/addToFavourites`, {\n      eventId,\n      userId,\n    }, {\n      headers: { Authorization: `Bearer ${token}` },\n    });\n  } catch (error) {\n    console.error('Error adding to favorites:', error);\n    throw error;\n  }\n};\n\nexport const updateEventStatus = async (userId, eventId, newStatus) => {\n  try {\n    const token = await getToken();\n    return axios.put(`${API_URL}/events/updateUserEventStatus`, {\n      userId,\n      eventId,\n      newStatus,\n    }, {\n      headers: { Authorization: `Bearer ${token}` },\n    });\n  } catch (error) {\n    console.error('Error updating event status:', error);\n    throw error;\n  }\n};\n\n// Function to remove an event from a user's favorites\nexport const removeFromFavorites = async (userId, eventId) => {\n  try {\n    const token = await getToken();\n    return axios.delete(`${API_URL}/removeFromFavorites`, {\n      headers: { Authorization: `Bearer ${token}` },\n      data: { userId, eventId }\n    });\n  } catch (error) {\n    console.error('Error removing event from favorites:', error);\n    throw error;\n  }\n};\n\n\nexport const getUserHistory = async (userId, headers) => {\n  try {\n    // The body data is passed as the second argument, headers as the third\n    return await axios.post(\n      `${API_URL}/users/getUserHistory`,\n      { userId },   // Body data\n      { headers }   // Headers\n    );\n  } catch (error) {\n    console.error('Error fetching user history:', error);\n    throw error;\n  }\n};","import React, { useEffect, useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport 'bootstrap/dist/css/bootstrap.min.css'; // Ensure Bootstrap CSS is imported\nimport { FaHeart } from 'react-icons/fa'; // Use react-icons for heart icon\nimport { useAuth0 } from '@auth0/auth0-react';\nimport { addToFavorites, removeFromFavorites } from '../utils/api'; // Import the global API functions\n\nconst EventCard = ({ event = {}, userFavorites = [] }) => {\n  const [isFavorite, setIsFavorite] = useState(false);\n  const { loginWithRedirect, isAuthenticated, user } = useAuth0();\n\n  const {\n    name = 'Unknown Event',\n    localDate,\n    localTime,\n    images = [], // Default to empty array if images is not provided\n    id,\n  } = event;\n\n  useEffect(() => {\n    // Set initial favorite status based on userFavorites\n    if (userFavorites.includes(id)) {\n      setIsFavorite(true);\n    }\n  }, [userFavorites, id]);\n\n  const handleFavoriteClick = async (e) => {\n    e.stopPropagation(); // Prevents event propagation to the Link component\n    if (!isAuthenticated) {\n      loginWithRedirect();\n      return;\n    }\n\n    try {\n      setIsFavorite(!isFavorite);\n\n      if (!isFavorite) {\n        // Add to favorites\n        await addToFavorites(id, user.sub); // Pass eventId and userId to the API\n      } else {\n        // Remove from favorites\n        await removeFromFavorites(id, user.sub); // Pass eventId and userId to the API\n      }\n\n      console.log('Favorite status updated');\n    } catch (error) {\n      console.error('Error updating favorite status:', error);\n      // Revert the UI state if the API call fails\n      setIsFavorite(!isFavorite);\n    }\n  };\n\n  return (\n    <div className=\"event-card\">\n      <Link to={`/events/${id}`} className=\"event-banner\">\n        <img\n          src={images[0]?.url || 'https://via.placeholder.com/300'} // Fallback image URL\n          alt={name}\n          className=\"event-image\"\n        />\n        <div className=\"event-info\">\n          <h3>{name}</h3>\n          <p>Date: {new Date(localDate).toLocaleDateString()}</p>\n          <p>Time: {localTime}</p>\n        </div>\n      </Link>\n      <button \n        className={`btn ${isFavorite ? 'btn-danger' : 'btn-outline-danger'} favorite-button`} \n        onClick={handleFavoriteClick}\n        aria-label={isFavorite ? 'Remove from favorites' : 'Add to favorites'}\n      >\n        <FaHeart className={isFavorite ? 'text-danger' : 'text-muted'} />\n      </button>\n    </div>\n  );\n};\n\nexport default EventCard;\n","// HomePage.jsx\nimport React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport EventCard from '../components/EventCard';\nimport { useAuth0 } from '@auth0/auth0-react';\n\nconst HomePage = ({ searchQuery }) => {\n  const [events, setEvents] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const { isAuthenticated, loginWithRedirect } = useAuth0();\n\n  // Fetch events data from the API\n  useEffect(() => {\n    const fetchEvents = async () => {\n      try {\n        const response = await axios.get('http://localhost:5001/events');\n        setEvents(response.data);\n      } catch (error) {\n        setError('Error fetching events. Please try again later.');\n        console.error('Error fetching events:', error);\n      } finally {\n        setLoading(false);\n      }\n    };\n\n    fetchEvents();\n  }, []);\n\n  // Handle favorite click\n  const handleFavoriteClick = (eventId) => {\n    if (isAuthenticated) {\n      console.log('Favorite clicked for event:', eventId);\n      // Add logic to save the favorite event for the user\n    } else {\n      loginWithRedirect();\n    }\n  };\n\n  // Handle details click\n  const handleDetailsClick = (eventId) => {\n    console.log('Details clicked for event:', eventId);\n    // Add logic to navigate to event details page\n  };\n\n  // Filter events based on search query\n  const filteredEvents = events.filter(event =>\n    event.name.toLowerCase().includes(searchQuery.toLowerCase())\n  );\n\n  if (loading) return <div>Loading...</div>;\n  if (error) return <div>{error}</div>;\n\n  return (\n    <div>\n      <h2>Upcoming Events</h2>\n      <div className=\"event-list\">\n        {filteredEvents.map(event => (\n          <EventCard\n            key={event.id}\n            event={event}\n            onFavoriteClick={() => handleFavoriteClick(event.id)}\n            onDetailsClick={() => handleDetailsClick(event.id)}\n            isFavorite={false} // Implement actual favorite check logic\n          />\n        ))}\n      </div>\n      {!isAuthenticated && (\n        <button onClick={() => loginWithRedirect()}>Login</button>\n      )}\n    </div>\n  );\n};\n\nexport default HomePage;\n","import React, { useEffect, useState } from 'react';\nimport { useAuth0 } from '@auth0/auth0-react';\nimport moment from 'moment';\nimport { useNavigate } from 'react-router-dom';\nimport { getUserById, getEventById, updateEventStatus, getUserHistory } from '../utils/api'; // Adjust path as necessary\n\nconst ProfilePage = () => {\n  const { user, isAuthenticated, getAccessTokenSilently } = useAuth0();\n  const [userData, setUserData] = useState(null);\n  const [eventDetails, setEventDetails] = useState({});\n  const [bookedEvents, setBookedEvents] = useState([]);\n  const [error, setError] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const navigate = useNavigate();\n\n  \n\n  useEffect(() => {\n    if (isAuthenticated && user) {\n      fetchUserData(user.sub);\n    }\n  }, [isAuthenticated, user]);\n\n  const fetchUserData = async (auth0Id) => {\n    try {\n      const token = await getAccessTokenSilently();\n      const headers = {\n        'Authorization': `Bearer ${token}`,\n        'Content-Type': 'application/json'\n      };\n\n      // Fetch user data\n      const userResponse = await getUserById(auth0Id, headers);\n      const userData = userResponse.data.user;\n      setUserData(userData);\n\n      console.log(\"Fetched User Data:\", userData); // Debugging line\n\n      // Fetch user history for booked events\n      const historyResponse = await getUserHistory(auth0Id, headers);\n      const historyData = historyResponse.data; // Adjust if needed based on your API response\n\n      console.log(\"History Response:\", historyResponse); // Debugging line\n      console.log(\"History Data:\", historyData); // Debugging line\n\n      // Extract booked events from history\n      const fetchedBookedEvents = historyData.bookedEvents || [];\n      setBookedEvents(fetchedBookedEvents);\n\n      console.log(\"Fetched Booked Events:\", fetchedBookedEvents); // Debugging line\n\n      // Create a set of unique event IDs from favorites and booked events\n      const eventIds = [...new Set([\n        ...(userData.favorites || []),\n        ...(fetchedBookedEvents.map(event => event.event_id) || [])\n      ])];\n\n      if (eventIds.length > 0) {\n        const eventDetailsPromises = eventIds.map(eventId => getEventById(eventId, headers));\n        const eventDetailsResponses = await Promise.all(eventDetailsPromises);\n        const eventDetailsMap = {};\n        eventDetailsResponses.forEach(res => {\n          eventDetailsMap[res.data.id] = res.data;\n        });\n        setEventDetails(eventDetailsMap);\n      }\n\n    } catch (err) {\n      setError('Failed to fetch user data');\n      console.error('Error fetching user data:', err);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n\n  const handleStatusChange = async (eventId, newStatus, eventDate) => {\n    const currentDate = moment().format('YYYY-MM-DD');\n\n    if (moment(currentDate).isAfter(eventDate)) {\n      alert('Event is expired.');\n      return;\n    }\n\n    try {\n      const token = await getAccessTokenSilently();\n      const headers = {\n        'Authorization': `Bearer ${token}`,\n        'Content-Type': 'application/json'\n      };\n\n      await updateEventStatus(userData.id, eventId, newStatus, headers);\n      alert('Status updated successfully');\n      fetchUserData(userData.id); // Refresh user data after status update\n    } catch (err) {\n      console.error('Error updating status:', err);\n      alert('Failed to update status.');\n    }\n  };\n\n  const handleCreateEvent = () => {\n    navigate('/create-event');\n  };\n\n  if (loading) return <div>Loading...</div>;\n  if (error) return <div>{error}</div>;\n\n  return (\n    <div>\n      <h2>Profile Page</h2>\n      {userData ? (\n        <div>\n          <p><strong>Name:</strong> {userData.name}</p>\n          <p><strong>Email:</strong> {userData.email}</p>\n          <p><strong>Organization:</strong> {userData.organization}</p>\n\n          <button onClick={handleCreateEvent}>Create Event</button>\n\n          <h3>Favorites</h3>\n          <ul>\n            {userData.favorites && userData.favorites.map((eventId) => (\n              <li key={eventId}>\n                {eventDetails[eventId]?.name || eventId}\n              </li>\n            ))}\n          </ul>\n\n          <h3>Booked Events</h3>\n          <ul>\n            {bookedEvents.map((event) => (\n              <li key={event.event_id}>\n                {eventDetails[event.event_id]?.name || event.event_id} - {event.status}\n                <button onClick={() => handleStatusChange(event.event_id, 'going', event.event_date)}>Mark as Going</button>\n                <button onClick={() => handleStatusChange(event.event_id, 'not-going', event.event_date)}>Mark as Not Going</button>\n                {moment().isAfter(event.event_date) && (\n                  <span> (Event is expired)</span>\n                )}\n              </li>\n            ))}\n\n          </ul>\n        </div>\n      ) : (\n        <div>No user data available.</div>\n      )}\n    </div>\n  );\n};\n\nexport default ProfilePage;\n","import React, { useState, useEffect } from 'react';\nimport { useAuth0 } from '@auth0/auth0-react';\nimport { useNavigate } from 'react-router-dom';\nimport { getUserById, createEvent } from '../utils/api'; // Import the global API function\nimport authConfig from '../auth_config.json';\n\n\nconst CreateEventPage = () => {\n  const { user, isAuthenticated, getAccessTokenSilently } = useAuth0();\n  const [eventName, setEventName] = useState('');\n  const [eventDate, setEventDate] = useState('');\n  const [eventLocation, setEventLocation] = useState('');\n  const [eventDescription, setEventDescription] = useState('');\n  const [noOfTickets, setNoOfTickets] = useState('');\n  const [price, setPrice] = useState('');\n  const [error, setError] = useState(null);\n  const [success, setSuccess] = useState(false);\n  const navigate = useNavigate();\n  const [userData, setUserData] = useState(null);\n\n  useEffect(() => {\n    if (isAuthenticated) {\n      fetchUserData();\n    }\n  }, [isAuthenticated]);\n\n  const fetchUserData = async () => {\n    try {\n      const token = await getAccessTokenSilently({\n        authorizationParams: {\n          audience: authConfig.REACT_APP_AUTH0_AUDIENCE,\n          scope: [\"openid\", \"profile\", \"email\"].join(\" \"),\n        },\n      });\n\n      const response = await getUserById(user.sub, token);\n      setUserData(response.data.user);\n    } catch (err) {\n      setError('Failed to fetch user data');\n      console.error('Error fetching user data:', err);\n    }\n  };\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n\n    if (!userData) {\n      setError('User data not loaded');\n      return;\n    }\n\n    const eventPayload = {\n      event: {\n        id: `event-${Date.now()}`,  // Generating a unique ID for the event\n        name: eventName,\n        dates: {\n          start: {\n            localDate: eventDate,\n          },\n        },\n        classifications: [{ segment: { name: 'General' } }],\n        no_of_tickets: parseInt(noOfTickets),\n        price: parseFloat(price),\n        userId: userData.id,  // Assuming userData.id contains the user's ID\n      },\n      venue: {\n        id: `venue-${Date.now()}`,  // Generating a unique ID for the venue\n        name: eventLocation,\n        city: { name: 'Sample City' },  // You might want to extract the city from the location or let the user provide it\n      },\n    };\n\n    try {\n      const token = await getAccessTokenSilently({\n        authorizationParams: {\n          audience: authConfig.REACT_APP_AUTH0_AUDIENCE,\n          scope: [\"openid\", \"profile\", \"email\"].join(\" \"),\n        },\n      });\n\n      const response = await createEvent(eventPayload, token);\n\n      if (response.status === 200) {\n        setSuccess(true);\n        navigate('/'); // Redirect to home or events page after successful creation\n      } else {\n        setError('Failed to create event');\n      }\n    } catch (err) {\n      setError('An error occurred while creating the event');\n      console.error('Error creating event:', err);\n    }\n  };\n\n  return (\n    <div>\n      <h2>Create Event</h2>\n      {success && <p>Event created successfully!</p>}\n      {error && <p>{error}</p>}\n      <form onSubmit={handleSubmit}>\n        <div>\n          <label>Event Name:</label>\n          <input\n            type=\"text\"\n            value={eventName}\n            onChange={(e) => setEventName(e.target.value)}\n            required\n          />\n        </div>\n        <div>\n          <label>Event Date:</label>\n          <input\n            type=\"date\"\n            value={eventDate}\n            onChange={(e) => setEventDate(e.target.value)}\n            required\n          />\n        </div>\n        <div>\n          <label>Location:</label>\n          <input\n            type=\"text\"\n            value={eventLocation}\n            onChange={(e) => setEventLocation(e.target.value)}\n            required\n          />\n        </div>\n        <div>\n          <label>Description:</label>\n          <textarea\n            value={eventDescription}\n            onChange={(e) => setEventDescription(e.target.value)}\n            required\n          />\n        </div>\n        <div>\n          <label>No. of Tickets:</label>\n          <input\n            type=\"number\"\n            value={noOfTickets}\n            onChange={(e) => setNoOfTickets(e.target.value)}\n            required\n          />\n        </div>\n        <div>\n          <label>Price:</label>\n          <input\n            type=\"number\"\n            value={price}\n            onChange={(e) => setPrice(e.target.value)}\n            required\n          />\n        </div>\n        <button type=\"submit\">Create Event</button>\n      </form>\n    </div>\n  );\n};\n\nexport default CreateEventPage;\n","import React, { useState } from 'react';\nimport { useAuth0 } from '@auth0/auth0-react';\nimport { FaCheckCircle, FaCcVisa, FaCcMastercard, FaCcAmex } from 'react-icons/fa'; \nimport { Button, Form } from 'react-bootstrap';\nimport { useParams } from 'react-router-dom'; // Import useParams\nimport { purchaseTickets } from '../utils/api'; // Import your API method\n\nconst PaymentPage = () => {\n  const { user, isAuthenticated } = useAuth0();\n  const { eventId } = useParams(); // Extract eventId from URL\n  const [firstName, setFirstName] = useState('');\n  const [lastName, setLastName] = useState('');\n  const [email, setEmail] = useState('');\n  const [cardNumber, setCardNumber] = useState('');\n  const [expiryDate, setExpiryDate] = useState('');\n  const [cvv, setCvv] = useState('');\n  const [noOfTickets, setNoOfTickets] = useState(1); // Default to 1 ticket\n  const [isValid, setIsValid] = useState(true);\n  const [purchaseSuccess, setPurchaseSuccess] = useState(false);\n\n  const emailRegex = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\n  const cardNumberRegex = /^\\d{16}$/; // 16 digits\n  const expiryDateRegex = /^(0[1-9]|1[0-2])\\/\\d{2}$/; // MM/YY format\n  const cvvRegex = /^\\d{3,4}$/; // 3 or 4 digits\n\n  \n  const handlePaymentSubmit = async () => {\n    \n    if (\n      emailRegex.test(email) &&\n      cardNumberRegex.test(cardNumber) &&\n      expiryDateRegex.test(expiryDate) &&\n      cvvRegex.test(cvv)\n    ) {\n      setIsValid(true);\n      const url = window.location.href;\n      const regex = /\\/events\\/([^/]+)\\/payment/;\n      const match = url.match(regex);\n      const event_Id =  match ? match[1] : null;\n      console.log(\"eventID in paymentpage\" + event_Id);\n      \n      try {\n        // API call to purchase tickets\n        if (user) { // Ensure user is authenticated\n          const response = await purchaseTickets(user.sub, event_Id, noOfTickets);\n\n          if (response.status === 200) {\n            setPurchaseSuccess(true);\n            console.log('Tickets purchased successfully');\n          } else {\n            console.error('Failed to purchase tickets:', response.data.error);\n          }\n        } else {\n          console.error('User is not authenticated');\n        }\n      } catch (err) {\n        console.error('Error during payment:', err);\n      }\n    } else {\n      setIsValid(false);\n    }\n    \n  };\n\n  return (\n    <div className=\"payment-page\">\n      <h1>Payment</h1>\n      <Form>\n        <Form.Group controlId=\"formFirstName\">\n          <Form.Label>First Name</Form.Label>\n          <Form.Control\n            type=\"text\"\n            placeholder=\"Enter your first name\"\n            value={firstName}\n            onChange={(e) => setFirstName(e.target.value)}\n            required\n          />\n        </Form.Group>\n        \n        <Form.Group controlId=\"formLastName\">\n          <Form.Label>Last Name</Form.Label>\n          <Form.Control\n            type=\"text\"\n            placeholder=\"Enter your last name\"\n            value={lastName}\n            onChange={(e) => setLastName(e.target.value)}\n            required\n          />\n        </Form.Group>\n        \n        <Form.Group controlId=\"formEmail\">\n          <Form.Label>Email Address</Form.Label>\n          <Form.Control\n            type=\"email\"\n            placeholder=\"Enter your email\"\n            value={email}\n            onChange={(e) => setEmail(e.target.value)}\n            isInvalid={!isValid && !emailRegex.test(email)}\n            required\n          />\n          <Form.Control.Feedback type=\"invalid\">\n            Please enter a valid email address.\n          </Form.Control.Feedback>\n        </Form.Group>\n        \n        <Form.Group controlId=\"formCardNumber\">\n          <Form.Label>Card Number</Form.Label>\n          <Form.Control\n            type=\"text\"\n            placeholder=\"Enter your card number\"\n            value={cardNumber}\n            onChange={(e) => setCardNumber(e.target.value)}\n            isInvalid={!isValid && !cardNumberRegex.test(cardNumber)}\n            required\n          />\n          <Form.Control.Feedback type=\"invalid\">\n            Please enter a valid 16-digit card number.\n          </Form.Control.Feedback>\n        </Form.Group>\n        \n        <Form.Group controlId=\"formExpiryDate\">\n          <Form.Label>Expiry Date</Form.Label>\n          <Form.Control\n            type=\"text\"\n            placeholder=\"MM/YY\"\n            value={expiryDate}\n            onChange={(e) => setExpiryDate(e.target.value)}\n            isInvalid={!isValid && !expiryDateRegex.test(expiryDate)}\n            required\n          />\n          <Form.Control.Feedback type=\"invalid\">\n            Please enter a valid expiry date (MM/YY).\n          </Form.Control.Feedback>\n        </Form.Group>\n        \n        <Form.Group controlId=\"formCVV\">\n          <Form.Label>CVV</Form.Label>\n          <Form.Control\n            type=\"text\"\n            placeholder=\"Enter CVV\"\n            value={cvv}\n            onChange={(e) => setCvv(e.target.value)}\n            isInvalid={!isValid && !cvvRegex.test(cvv)}\n            required\n          />\n          <Form.Control.Feedback type=\"invalid\">\n            Please enter a valid CVV (3 or 4 digits).\n          </Form.Control.Feedback>\n        </Form.Group>\n        \n        <Form.Group controlId=\"formNoOfTickets\">\n          <Form.Label>Number of Tickets</Form.Label>\n          <Form.Control\n            type=\"number\"\n            value={noOfTickets}\n            onChange={(e) => setNoOfTickets(Number(e.target.value))}\n            required\n          />\n        </Form.Group>\n\n        <Button variant=\"primary\" onClick={handlePaymentSubmit}>\n          Submit Payment\n        </Button>\n      </Form>\n\n      {purchaseSuccess && (\n        <div className=\"payment-success mt-4\">\n          <FaCheckCircle color=\"green\" size=\"2em\" />\n          <p>Purchase successful!</p>\n          <p><strong>First Name:</strong> {firstName}</p>\n          <p><strong>Last Name:</strong> {lastName}</p>\n          <p><strong>Email:</strong> {email}</p>\n          <p><strong>Event:</strong> Concert</p>\n          \n          <div className=\"card-icons-container mt-2\">\n            <FaCcVisa className=\"card-icon\" />\n            <FaCcMastercard className=\"card-icon\" />\n            <FaCcAmex className=\"card-icon\" />\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default PaymentPage;\n","import React, { useState, useEffect } from 'react';\nimport { useAuth0 } from '@auth0/auth0-react';\nimport { useNavigate } from 'react-router-dom';\nimport authConfig from '../auth_config.json';\n\nconst CreateEventPage = () => {\n  const { user, isAuthenticated, getAccessTokenSilently } = useAuth0();\n  const [eventName, setEventName] = useState('');\n  const [eventDate, setEventDate] = useState('');\n  const [eventLocation, setEventLocation] = useState('');\n  const [eventDescription, setEventDescription] = useState('');\n  const [noOfTickets, setNoOfTickets] = useState('');\n  const [price, setPrice] = useState('');\n  const [eventType, setEventType] = useState('');\n  const [eventUrl, setEventUrl] = useState('');\n  const [eventLocale, setEventLocale] = useState('');\n  const [eventImages, setEventImages] = useState('');\n  const [salesStartDate, setSalesStartDate] = useState('');\n  const [salesEndDate, setSalesEndDate] = useState('');\n  const [localTime, setLocalTime] = useState('');\n  const [timezone, setTimezone] = useState('');\n  const [statusCode, setStatusCode] = useState('');\n  const [category, setCategory] = useState('');\n  const [error, setError] = useState(null);\n  const [success, setSuccess] = useState(false);\n  const [userData, setUserData] = useState(null);\n  const navigate = useNavigate();\n\n  useEffect(() => {\n    if (isAuthenticated) {\n      fetchUserData();\n    }\n  }, [isAuthenticated]);\n\n  const fetchUserData = async () => {\n    try {\n      const token = await getAccessTokenSilently({\n        authorizationParams: {\n          audience: authConfig.REACT_APP_AUTH0_AUDIENCE,\n          scope: 'openid profile email',\n        },\n      });\n\n      const response = await fetch(`/users/${user.sub}`, {\n        headers: {\n          Authorization: `Bearer ${token}`,\n          'Content-Type': 'application/json',\n        },\n      });\n\n      if (!response.ok) {\n        throw new Error('Failed to fetch user data');\n      }\n\n      const data = await response.json();\n      setUserData(data.user);\n    } catch (err) {\n      setError('Failed to fetch user data');\n      console.error('Error fetching user data:', err);\n    }\n  };\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n\n    if (!userData) {\n      setError('User data not loaded');\n      return;\n    }\n\n    const eventPayload = {\n      id: `event-${Date.now()}`, // Generate a unique ID\n      name: eventName || null,\n      type: eventType || null,\n      url: eventUrl || null,\n      locale: eventLocale || null,\n      images: eventImages || null,\n      sales: {\n        public: {\n          startDateTime: salesStartDate || null,\n          endDateTime: salesEndDate || null,\n        },\n      },\n      localDate: eventDate ? new Date(eventDate).toISOString() : null,\n      localTime: localTime || null,\n      timezone: timezone || null,\n      statusCode: statusCode || null,\n      category: category || '',\n      posted_by: userData ? { auth0_id: userData.auth0_id } : null,\n      no_of_tickets: parseInt(noOfTickets, 10) || null,\n      price: parseFloat(price) || null,\n      venue: {\n        id: `venue-${Date.now()}`, // Generate a unique ID for the venue\n      },\n      classifications: null, // Add any other fields or data as needed\n    };\n\n    try {\n      const response = await fetch('http://localhost:5001/events', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify(eventPayload),\n      });\n\n      if (response.ok) {\n        setSuccess(true);\n        navigate('/'); // Redirect to home or events page after successful creation\n      } else {\n        setError('Failed to create event');\n      }\n    } catch (err) {\n      setError('An error occurred while creating the event');\n      console.error('Error creating event:', err);\n    }\n  };\n\n  return (\n    <div>\n      <h2>Create Event</h2>\n      {success && <p>Event created successfully!</p>}\n      {error && <p>{error}</p>}\n      <form onSubmit={handleSubmit}>\n        <div>\n          <label>Event Name:</label>\n          <input\n            type=\"text\"\n            value={eventName}\n            onChange={(e) => setEventName(e.target.value)}\n            required\n          />\n        </div>\n        <div>\n          <label>Event Type:</label>\n          <input\n            type=\"text\"\n            value={eventType}\n            onChange={(e) => setEventType(e.target.value)}\n          />\n        </div>\n        <div>\n          <label>Event URL:</label>\n          <input\n            type=\"text\"\n            value={eventUrl}\n            onChange={(e) => setEventUrl(e.target.value)}\n          />\n        </div>\n        <div>\n          <label>Event Locale:</label>\n          <input\n            type=\"text\"\n            value={eventLocale}\n            onChange={(e) => setEventLocale(e.target.value)}\n          />\n        </div>\n        <div>\n          <label>Event Images (comma-separated URLs):</label>\n          <input\n            type=\"text\"\n            value={eventImages}\n            onChange={(e) => setEventImages(e.target.value)}\n          />\n        </div>\n        <div>\n          <label>Sales Start Date:</label>\n          <input\n            type=\"datetime-local\"\n            value={salesStartDate}\n            onChange={(e) => setSalesStartDate(e.target.value)}\n          />\n        </div>\n        <div>\n          <label>Sales End Date:</label>\n          <input\n            type=\"datetime-local\"\n            value={salesEndDate}\n            onChange={(e) => setSalesEndDate(e.target.value)}\n          />\n        </div>\n        <div>\n          <label>Event Date:</label>\n          <input\n            type=\"date\"\n            value={eventDate}\n            onChange={(e) => setEventDate(e.target.value)}\n            required\n          />\n        </div>\n        <div>\n          <label>Local Time:</label>\n          <input\n            type=\"text\"\n            value={localTime}\n            onChange={(e) => setLocalTime(e.target.value)}\n          />\n        </div>\n        <div>\n          <label>Timezone:</label>\n          <input\n            type=\"text\"\n            value={timezone}\n            onChange={(e) => setTimezone(e.target.value)}\n          />\n        </div>\n        <div>\n          <label>Status Code:</label>\n          <input\n            type=\"text\"\n            value={statusCode}\n            onChange={(e) => setStatusCode(e.target.value)}\n          />\n        </div>\n        <div>\n          <label>Category:</label>\n          <input\n            type=\"text\"\n            value={category}\n            onChange={(e) => setCategory(e.target.value)}\n          />\n        </div>\n        <div>\n          <label>Location:</label>\n          <input\n            type=\"text\"\n            value={eventLocation}\n            onChange={(e) => setEventLocation(e.target.value)}\n            required\n          />\n        </div>\n        <div>\n          <label>Description:</label>\n          <textarea\n            value={eventDescription}\n            onChange={(e) => setEventDescription(e.target.value)}\n            required\n          />\n        </div>\n        <div>\n          <label>No. of Tickets:</label>\n          <input\n            type=\"number\"\n            value={noOfTickets}\n            onChange={(e) => setNoOfTickets(e.target.value)}\n            required\n          />\n        </div>\n        <div>\n          <label>Price:</label>\n          <input\n            type=\"number\"\n            value={price}\n            onChange={(e) => setPrice(e.target.value)}\n            required\n          />\n        </div>\n        <button type=\"submit\">Create Event</button>\n      </form>\n    </div>\n  );\n};\n\nexport default CreateEventPage;\n","// import React from 'react';\n// import { useAuth0 } from '@auth0/auth0-react';\n// import { BrowserRouter as Router, Routes, Route } from 'react-router-dom';\n// import authConfig from './auth_config.json';\n\n// function App() {\n//   const { loginWithRedirect, logout, user, isAuthenticated, getAccessTokenSilently } = useAuth0();\n  \n//   const requestedScopes = [\"openid\",\"profile\", \"email\"];\n\n//   const fetchUserData = async () => {\n//     if (isAuthenticated) {\n//       try {\n//         const token = await getAccessTokenSilently({\n//           authorizationParams: {\n//             audience: authConfig.REACT_APP_AUTH0_AUDIENCE,\n//             scope: requestedScopes.join(\" \"),\n//           },\n//         });\n        \n//         console.log(\"here the token = {}\", token);\n//         const response = await fetch(`http://localhost:5001/users/authentication`, {\n//           headers: {\n//             Authorization: `Bearer ${token}`\n//           },\n//         });\n  \n//         if (!response.ok) {\n//           throw new Error('Network response was not ok');\n//         }\n  \n//         console.log(\"Everything on frontend is successful\");\n//       } catch (error) {\n//         console.error('Error fetching user data:', error);\n//       }\n//     }\n//   };\n\n//   return (\n//       <div>\n//         {isAuthenticated ? (\n//           <>\n//             <p>Hello, {user.name}</p>\n//             <button onClick={() => logout({ returnTo: window.location.origin })}>Log Out</button>\n//             <button onClick={fetchUserData}>Fetch User Data</button>\n//           </>\n//         ) : (\n//           <button onClick={() => loginWithRedirect()}>Log In</button>\n//         )}\n//       </div>\n//   );\n// }\n\n// export default App;\n\n\n\n\n// /**\n//  * Fetches an access token from Auth0.\n//  * @returns {Promise<string>} The access token.\n//  */\n// const fetchAccessToken = async () => {\n//   try {\n//     const response = await fetch('https://dev-b2liv381nwhfqbp7.us.auth0.com/oauth/token', {\n//       method: 'POST',\n//       headers: {\n//         'Content-Type': 'application/json',\n//       },\n//       body: JSON.stringify({\n//         grant_type: 'client_credentials',\n//         client_id: '<YOUR_CLIENT_ID>',\n//         client_secret: '<YOUR_CLIENT_SECRET>',\n//         audience: '<YOUR_API_IDENTIFIER>',\n//       }),\n//     });\n\n//     if (!response.ok) {\n//       throw new Error('Network response was not ok');\n//     }\n\n//     const data = await response.json();\n//     return data.access_token; // Return the access token\n//   } catch (error) {\n//     console.error('Error fetching access token:', error);\n//     throw error;\n//   }\n// };\n\nimport React, { useEffect, useState } from 'react';\nimport { Routes, Route, Link, useNavigate } from 'react-router-dom';\nimport { useAuth0 } from '@auth0/auth0-react';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './styles/global.css';\nimport HomePage from './pages/HomePage';\nimport authConfig from './auth_config.json';\nimport ProfilePage from './pages/ProfilePage';\nimport EventDetailsPage from './pages/eventDetailsPage';\nimport PaymentPage from './pages/PaymentPage';\nimport CreateEventPage from './pages/CreateEventPage';\nimport { getUserById, updateUserOrganization } from './utils/api'; // Import API functions\nimport TokenUtil from './utils/TokenUtil';\n\nfunction App() {\n  const { loginWithRedirect, logout, user, isAuthenticated, getAccessTokenSilently, isLoading } = useAuth0();\n  const [isDarkMode, setIsDarkMode] = useState(false);\n  const [searchQuery, setSearchQuery] = useState('');\n  const [showModal, setShowModal] = useState(false);\n  const [organization, setOrganization] = useState('');\n  const [firstName, setFirstName] = useState('');\n  const [lastName, setLastName] = useState('');\n  const [email, setEmail] = useState('');\n  const navigate = useNavigate();\n  const requestedScopes = [\"openid\", \"profile\", \"email\"];\n\n  useEffect(() => {\n    const handleAuth = async () => {\n      if (isAuthenticated) {\n        try {\n          await checkUserInDatabase();\n        } catch (error) {\n          console.error('Error handling auth:', error);\n        }\n      }\n    };\n\n    handleAuth();\n  }, [isAuthenticated]);\n\n  const storeUserInDatabase = async (organizationValue = '') => {\n    if (isAuthenticated && user) {\n      try {\n        // Implement logic to store user in the database\n        console.log('User stored successfully');\n      } catch (error) {\n        console.error('Error saving user data:', error);\n      }\n    }\n  };\n\n  const checkUserInDatabase = async () => {\n    if (!isAuthenticated || !user) return;\n\n    try {\n      const token = await getAccessTokenSilently({\n        authorizationParams: {\n          audience: authConfig.REACT_APP_AUTH0_AUDIENCE,\n          scope: requestedScopes.join(\" \"),\n        },\n      });\n\n      TokenUtil.setToken(token);\n\n      const response = await getUserById(user.sub);\n\n      if (!response.data) {\n        if (user.sub.startsWith('google')) {\n          setEmail(user.email);\n          setFirstName(user.given_name || '');\n          setLastName(user.family_name || '');\n          setShowModal(true);\n        } else {\n          await storeUserInDatabase();\n        }\n      } else {\n        if (!response.data.organization && user.sub.startsWith('google')) {\n          setEmail(user.email);\n          setFirstName(response.data.firstName || user.given_name || '');\n          setLastName(response.data.lastName || user.family_name || '');\n          setShowModal(true);\n        }\n      }\n    } catch (error) {\n      console.error('Error checking user in database:', error);\n    }\n  };\n\n  const handleModalSubmit = async (event) => {\n    event.preventDefault(); // Prevent the default form submission\n\n    try {\n      await updateUserOrganization(user.sub, organization, firstName, lastName);\n      setShowModal(false); // Close the modal after successful submission\n    } catch (error) {\n      console.error('Error submitting modal form:', error);\n    }\n  };\n\n  if (isLoading) {\n    return <div>Loading...</div>;\n  }\n\n  return (\n    <div className={isDarkMode ? 'dark-mode' : 'light-mode'}>\n      <nav className=\"navbar navbar-expand-lg navbar-light\">\n        <Link className=\"navbar-brand\" to=\"/\">Event Finder</Link>\n        <div className=\"collapse navbar-collapse\">\n          <ul className=\"navbar-nav mr-auto\">\n            <li className=\"nav-item\">\n              <input\n                type=\"text\"\n                className=\"form-control\"\n                placeholder=\"Search for events\"\n                value={searchQuery}\n                onChange={(e) => setSearchQuery(e.target.value)}\n              />\n            </li>\n          </ul>\n          <ul className=\"navbar-nav ml-auto\">\n            {isAuthenticated ? (\n              <>\n                <li className=\"nav-item\">\n                  <Link to=\"/profile\">\n                    <button className=\"btn btn-primary\">Profile</button>\n                  </Link>\n                </li>\n                <li className=\"nav-item\">\n                  <button className=\"btn btn-danger\" onClick={() => logout({ returnTo: window.location.origin })}>Log Out</button>\n                </li>\n              </>\n            ) : (\n              <li className=\"nav-item\">\n                <button className=\"btn btn-primary\" onClick={() => loginWithRedirect()}>Log In</button>\n              </li>\n            )}\n            <li className=\"nav-item\">\n              <button className=\"btn btn-info\" onClick={() => setIsDarkMode(!isDarkMode)}>{isDarkMode ? 'Light Mode' : 'Dark Mode'}</button>\n            </li>\n            <li>\n              <div>\n                {isAuthenticated ? (\n                  <p>Hello, {user.name}</p>\n                ) : null}\n              </div>\n            </li>\n          </ul>\n        </div>\n      </nav>\n      <Routes>\n        <Route path=\"/\" element={<HomePage searchQuery={searchQuery} />} />\n        <Route path=\"/profile\" element={<ProfilePage />} />\n        <Route path=\"/events/:eventID\" element={<EventDetailsPage />} />\n        <Route path=\"/events/:eventID/payment\" element={<PaymentPage />} />\n        <Route path=\"/create-event\" element={<CreateEventPage />} />\n      </Routes>\n\n      {showModal && (\n        <div className=\"modal\" tabIndex=\"-1\" role=\"dialog\" style={{ display: 'block' }}>\n          <div className=\"modal-dialog\" role=\"document\">\n            <div className=\"modal-content\">\n              <div className=\"modal-header\">\n                <h5 className=\"modal-title\">Additional Information Required</h5>\n                <button type=\"button\" className=\"close\" onClick={() => setShowModal(false)}>\n                  <span aria-hidden=\"true\">&times;</span>\n                </button>\n              </div>\n              <div className=\"modal-body\">\n                <form onSubmit={handleModalSubmit}>\n                  <div className=\"form-group\">\n                    <label htmlFor=\"email\">Email:</label>\n                    <input\n                      type=\"text\"\n                      className=\"form-control\"\n                      id=\"email\"\n                      value={email}\n                      readOnly\n                    />\n                  </div>\n                  <div className=\"form-group\">\n                    <label htmlFor=\"firstName\">First Name:</label>\n                    <input\n                      type=\"text\"\n                      className=\"form-control\"\n                      id=\"firstName\"\n                      value={firstName}\n                      onChange={(e) => setFirstName(e.target.value)}\n                      required\n                    />\n                  </div>\n                  <div className=\"form-group\">\n                    <label htmlFor=\"lastName\">Last Name:</label>\n                    <input\n                      type=\"text\"\n                      className=\"form-control\"\n                      id=\"lastName\"\n                      value={lastName}\n                      onChange={(e) => setLastName(e.target.value)}\n                      required\n                    />\n                  </div>\n                  <div className=\"form-group\">\n                    <label htmlFor=\"organization\">Organization:</label>\n                    <input\n                      type=\"text\"\n                      className=\"form-control\"\n                      id=\"organization\"\n                      value={organization}\n                      onChange={(e) => setOrganization(e.target.value)}\n                      required\n                    />\n                  </div>\n                  <button type=\"submit\" className=\"btn btn-primary\">Submit</button>\n                </form>\n              </div>\n            </div>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React, { Component } from 'react';\n\nclass ErrorBoundary extends Component {\n  constructor(props) {\n    super(props);\n    this.state = { hasError: false };\n  }\n\n  static getDerivedStateFromError() {\n    return { hasError: true };\n  }\n\n  componentDidCatch(error, errorInfo) {\n    // You can log the error to an error reporting service here\n    console.error(\"Error caught by ErrorBoundary:\", error, errorInfo);\n  }\n\n  render() {\n    if (this.state.hasError) {\n      return <h1>Something went wrong. Please try again later.</h1>;\n    }\n\n    return this.props.children;\n  }\n}\n\nexport default ErrorBoundary;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport { Auth0Provider } from '@auth0/auth0-react';\nimport App from './App';\nconst cors = require('cors');\nimport authConfig from './auth_config.json';\nimport './styles/global.css';\n\nimport reportWebVitals from './reportWebVitals';\nimport ErrorBoundary from './components/errorBoundary';\nimport { BrowserRouter as Router } from 'react-router-dom';  // Use BrowserRouter here\nimport Modal from 'react-modal';\n\nModal.setAppElement('#root');\n\nconst requestedScopes = [\"profile\", \"email\"];\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <ErrorBoundary>\n      <Router>  {/* BrowserRouter is now used */}\n        <Auth0Provider\n          domain={authConfig.REACT_APP_AUTH0_DOMAIN}\n          clientId={authConfig.REACT_APP_AUTH0_CLIENT_ID}\n          authorizationParams={{\n            redirect_uri: window.location.origin,\n            audience: authConfig.REACT_APP_AUTH0_AUDIENCE,\n            scope: requestedScopes.join(\" \"),\n          }}\n        >\n          <App />\n        </Auth0Provider>\n      </Router>\n    </ErrorBoundary>\n  </React.StrictMode>\n);\n\nreportWebVitals();\n"],"sourceRoot":""}